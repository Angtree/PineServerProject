{"name":"Pine-server","tagline":"","body":"Version management\r\n==================\r\n\r\nv 1.0.9 latest version update.\r\n---------------------------------\r\n**Bug fixed**\r\n\r\n  * unlike thread bug fixed\r\n\r\n\r\n### v 1.0.8 latest version update.\r\n**Update**\r\n\r\n  * Modify notification message\r\n  \r\n    Android\r\n    \r\n        when there is new thread(10): '누군가 새 글을 남겼습니다'\r\n        when there is new comment in your thread(11): '당신의 글에 댓글이 달렸습니다'\r\n        when there is new comment in subscribed thread(12): '댓글 단 글에 새로운 댓글이 달렸습니다'\r\n        when there is new star in your thread(20): '누군가 당신의 글에 별을 달았습니다'\r\n        when there is new star in your comment(21): '누군가 당신의 댓글에 별을 달았습니다'\r\n\r\n    iOS\r\n    \r\n        (10): '누군가 새 글을 남겼습니다'\r\n        (11): '당신의 글에 댓글이 달렸습니다'\r\n        (12): '댓글 단 글에 새로운 댓글이 달렸습니다'\r\n        (20): '누군가 당신의 글에 별을 달았습니다 ★'\r\n        (21): '누군가 당신의 댓글에 별을 달았습니다 ★'\r\n        \r\n  * Add comment_id in new comment push message only android.\r\n        \r\n**Bug fixed**\r\n  \r\n  * Create friendship bug fixed : User can not be friend with herself.\r\n\r\n\r\n### v 1.0.7\r\n**Update**\r\n\r\n  * GET /threads/<thread_id>/comments API virtual id algorithm\r\n  \r\n    from\r\n      \r\n        comment_user_id:    (Number, User's virtual id. It starts 0.),\r\n    \r\n    to\r\n    \r\n        comment_user_id:    (Number, User's virtual id. It starts 1. Thread author is always 0),\r\n\r\n\r\n### v 1.0.6.1\r\n**Bug Fixed**\r\n\r\n  * comment push\r\n\r\n\r\n### v 1.0.6 \r\n**Bug Fixed**\r\n\r\n  * timeline/friends/since_offset API \r\n  * timeline/friends/previous_offset API \r\n  * comment push\r\n\r\n### v 1.0.5.1\r\n**Minor Update**\r\n  \r\n  * Minimum friend is now 2 (before 4) \r\n\r\n### v 1.0.5\r\n**Update**\r\n  \r\n  * Add APIs\r\n    \r\n    get pine user list (POST: /friends/get)\r\n    request authentication number (POST: /users/auth/request)\r\n    \r\n    \r\n  * Update API\r\n  \r\n    register user (POST: /users/register)\r\n    \r\n        request\r\n        {\r\n            username:       (String),\r\n            password:       (String),\r\n            auth_num:       (String, authentication number),\r\n            device_type:    (String, android or ios)\r\n        }\r\n\r\n        response\r\n        {\r\n            result:     (String, SUCCESS or FAIL),\r\n            message:    (String, error message),\r\n            auth_num:   (String, authentication number)\r\n        }\r\n\r\n### v 1.0.4\r\n**Deprecate**\r\n  * API /threads/<thread_id>/offset?is_friend={boolean}\r\n\r\n**Update**\r\n  * add `view_count` key in thread, timeline APIs.\r\n\r\n        Examples\r\n        {\r\n            id:           (Number, Threads.id),\r\n            type:         (Number, 0-none 1-author),\r\n            like_count:   (Number, how many users like),\r\n            view_count:   (Number, how many users view),\r\n            liked:        (Boolean, if user like or not),\r\n            pub_date:     (String, '%Y-%m-%d %H:%M:%S'),\r\n            image_url:    (String, image url here),\r\n            content:      (String, content <= 200),\r\n            comment:      (Number, how many comments commented)\r\n        },\r\n\r\n        Updated Apis\r\n        Get latest timeline                                      [/timeline/friends?count={count}]\r\n        Get next threads in timeline starting from offset thread [/timeline/friends/since_offset?offset_id={offset_id}&count={count}]\r\n        Get friend's timeline previous offset                    [/timeline/friends/previous_offset?offset_id={offset_id}&count={count}]      \r\n        Get thread                                               [/threads/<thread_id>]\r\n\r\n\r\n### v 1.0.3\r\n**Update**\r\n  * apply django 1.7\r\n  * apply request 2.4\r\n\r\n\r\n### v 1.0.2 update \r\n**Update**\r\n  * add `type` key in thread APIs.\r\n        \r\n        Examples\r\n        {\r\n            id:           (Number, Threads.id),\r\n            type:         (Number, 0-none 1-author),\r\n            like_count:   (Number, how many users like),\r\n            liked:        (Boolean, if user like or not),\r\n            pub_date:     (String, '%Y-%m-%d %H:%M:%S'),\r\n            image_url:    (String, image url here),\r\n            content:      (String, content <= 200),\r\n            comment:      (Number, how many comments commented)\r\n        },\r\n\r\n        Updated apis\r\n        Get latest timeline                                      [/timeline/friends?count={count}]\r\n        Get next threads in timeline starting from offset thread [/timeline/friends/since_offset?offset_id={offset_id}&count={count}]\r\n        Get friend's timeline previous offset                    [/timeline/friends/previous_offset?offset_id={offset_id}&count={count}]      \r\n        Get thread                                               [/threads/<thread_id>]\r\n\r\n\r\n### v 1.0.1 update.\r\n**Update**\r\n  * add event_date in ios push message. (need to test)\r\n  * add `image_url` key in ios push json.\r\n  \r\n        \"aps\": {\r\n            \"alert\": (message, String),\r\n            \"badge\": 1,\r\n        },\r\n        'thread_id': (int),\r\n        'event_date': 'YYYY-mm-dd HH:MM:SS',\r\n        'image_url': (String)\r\n\r\n**Bug fixed**\r\n  * thread, comment notification error.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}